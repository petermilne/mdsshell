module joerger_tr812
    names = case_sensitive

include file "XmdsWidgets.uil";

object
    JOERGER_TR812: XmBulletinBoardDialog 
        {
        arguments
            {
            XmNwidth = 756;
            XmNheight = 563;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNdialogTitle = 
            compound_string("Joerger Enterprises Model TR812-32 250KHz Transient Recorder");
            XmNnoResize = true;
            XmNborderWidth = 1;
            XmNautoUnmanage = false;
            };
        controls
            {
            XmLabelGadget 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 10;
                    XmNlabelString = 
                    compound_string("Camac name:");
                    };
                };
            XmLabelGadget 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 40;
                    XmNlabelString = 
                    compound_string("Comment:");
                    };
                };
            XmLabelGadget 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 70;
                    XmNlabelString = 
                    compound_string("Trigger:");
                    };
                };
            user_defined procedure XmdsCreateExprField 
                {
                arguments
                    {
                    XmNx = 110;
                    XmNy = 10;
                    XmNcolumns = 30;
                    XmNmarginHeight = 1;
                    XmdsNautoQuote = true;
                    XmdsNnid = DEVICE_NID;
                    XmdsNnidOffset = TR812$N_CTS_NAME;
                    XmdsNputOnApply = true;
                    XmdsNdefaultQuote = true;
                    };
                };
            user_defined procedure XmdsCreateExprField 
                {
                arguments
                    {
                    XmNx = 110;
                    XmNy = 40;
                    XmNcolumns = 30;
                    XmNmarginHeight = 1;
                    XmdsNautoQuote = true;
                    XmdsNnid = DEVICE_NID;
                    XmdsNnidOffset = TR812$N_COMMENT;
                    XmdsNputOnApply = true;
                    XmdsNdefaultQuote = true;
                    };
                };
            user_defined procedure XmdsCreateExprField 
                {
                arguments
                    {
                    XmNx = 130;
                    XmNy = 70;
                    XmNcolumns = 30;
                    XmNmarginHeight = 1;
                    XmdsNautoQuote = false;
                    XmdsNnid = DEVICE_NID;
                    XmdsNnidOffset = TR812$N_TRIGGER;
                    XmdsNputOnApply = true;
                    XmdsNdefaultQuote = true;
                    };
                };
            user_defined procedure XmdsCreateDigChans 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 140;
                    XmdsNchannels = 8;
                    XmdsNdataNidOffset = TR812$N_CHAN_HEAD;
                    XmdsNendIdxNidOffset = TR812$N_CHAN_ENDIDX;
                    XmdsNnid = DEVICE_NID;
                    XmdsNnidOffset = TR812$N_CHANNELS;
                    XmdsNnodesPerChannel = TR812$K_NODES_PER_CHANNEL;
                    XmdsNputOnApply = true;
                    XmdsNstartIdxNidOffset = TR812$N_CHAN_STARTIDX;
                    XmNborderWidth = 0;
                    XmNheight = 317;
                    XmNwidth = 612;
                    };
                };
            user_defined procedure XmdsCreateNidOptionMenu 
                {
                arguments
                    {
                    XmNx = 472;
                    XmNy = 9;
                    XmdsNnidOffset = TR812$N_PRE_TRIGGER;
                    XmNlabelString = 
                    compound_string("Pre-Trigger Samples:");
                    XmdsNlabelStrings = string_table(
                        compound_string("0/8 "),
                        
                        compound_string("1/8 "),
                        
                        compound_string("2/8 "),
                        
                        compound_string("3/8 "),
                        
                        compound_string("4/8 "),
                        
                        compound_string("5/8 "),
                        
                        compound_string("6/8 "),
                        
                        compound_string("7/8 "));
                    XmdsNnid = DEVICE_NID;
                    XmdsNputOnApply = true;
                    XmdsNvalueStrings = string_table(
                        compound_string("0 "),
                        
                        compound_string("1 "),
                        
                        compound_string("2 "),
                        
                        compound_string("3 "),
                        
                        compound_string("4 "),
                        
                        compound_string("5 "),
                        
                        compound_string("6 "),
                        
                        compound_string("7 "));
                    };
                };
            user_defined procedure XmdsCreateNidOptionMenu 
                {
                arguments
                    {
                    XmNx = 509;
                    XmNy = 42;
                    XmdsNnidOffset = TR812$N_ACT_MEMORY;
                    XmNlabelString = 
                    compound_string("Active Memory:");
                    XmdsNlabelStrings = string_table(
                        compound_string("1/8"),
                        
                        compound_string("2/8"),
                        
                        compound_string("3/8"),
                        
                        compound_string("4/8"),
                        
                        compound_string("5/8"),
                        
                        compound_string("6/8"),
                        
                        compound_string("7/8"),
                        
                        compound_string("8/8"));
                    XmdsNnid = DEVICE_NID;
                    XmdsNputOnApply = true;
                    XmdsNvalueStrings = string_table(
                        compound_string("1"),
                        
                        compound_string("2"),
                        
                        compound_string("3"),
                        
                        compound_string("4"),
                        
                        compound_string("5"),
                        
                        compound_string("6"),
                        
                        compound_string("7"),
                        
                        compound_string("8"));
                    };
                };
            user_defined procedure XmdsCreateOnOffToggleButton 
                {
                arguments
                    {
                    XmNx = 408;
                    XmNy = 99;
                    XmdsNnidOffset = TR812$N_BURST_MODE;
                    XmNlabelString = 
                    compound_string("Burst Mode");
                    XmdsNputOnApply = true;
                    XmdsNnid = DEVICE_NID;
                    };
                };
            XmLabelGadget 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 105;
                    XmNlabelString = 
                    compound_string("External Clock:");
                    };
                };
            user_defined procedure XmdsCreateExprField 
                {
                arguments
                    {
                    XmNx = 130;
                    XmNy = 100;
                    XmNcolumns = 30;
                    XmNmarginHeight = 1;
                    XmdsNautoQuote = false;
                    XmdsNnid = DEVICE_NID;
                    XmdsNnidOffset = TR812$N_EXT_CLOCK;
                    XmdsNputOnApply = true;
                    XmdsNdefaultQuote = true;
                    };
                };
            XmRowColumn 
                {
                arguments
                    {
                    XmNx = 622;
                    XmNy = 162;
                    XmNborderWidth = 0;
                    XmNmarginWidth = 0;
                    XmNmarginHeight = 0;
                    XmNspacing = 5;
                    };
                controls
                    {
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 70;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*0+TR812$N_CHAN_GAIN;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 1;
                            XmNy = 38;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*1+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 110;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*2+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 145;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*3+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 185;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*4+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 225;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*5+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 260;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*6+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    user_defined procedure XmdsCreateNidOptionMenu 
                        {
                        arguments
                            {
                            XmNx = 0;
                            XmNy = 295;
                            XmdsNnidOffset = TR812$N_CHANNELS+TR812$K_NODES_PER_CHANNEL*7+TR812$N_CHAN_GAIN;
                            XmdsNlabelStrings = GAIN_VALUES;
                            XmdsNvalueStrings = GAIN_VALUES;
                            XmdsNnid = DEVICE_NID;
                            XmdsNputOnApply = true;
                            };
                        };
                    };
                };
            user_defined procedure XmdsCreateOkButton 
                {
                arguments
                    {
                    XmNx = 10;
                    XmNy = 520;
                    };
                };
            user_defined procedure XmdsCreateResetButton 
                {
                arguments
                    {
                    XmNx = 481;
                    XmNy = 520;
                    };
                };
            user_defined procedure XmdsCreateApplyButton 
                {
                arguments
                    {
                    XmNx = 231;
                    XmNy = 520;
                    };
                };
            user_defined procedure XmdsCreateCancelButton 
                {
                arguments
                    {
                    XmNx = 681;
                    XmNy = 519;
                    };
                };
            XmLabelGadget 
                {
                arguments
                    {
                    XmNx = 655;
                    XmNy = 139;
                    XmNlabelString = 
                    compound_string("Gain");
                    };
                };
            user_defined procedure XmdsCreateXdBoxOnOffButton 
                {
                arguments
                    {
                    XmNx = 24;
                    XmNy = 465;
                    XmdsNnidOffset = TR812$N_INIT_ACTION;
                    XmNlabelString = 
                    compound_string("Init Action");
                    XmdsNnid = DEVICE_NID;
                    XmdsNputOnApply = true;
                    };
                };
            user_defined procedure XmdsCreateXdBoxOnOffButton 
                {
                arguments
                    {
                    XmNx = 201;
                    XmNy = 465;
                    XmdsNnidOffset = TR812$N_STORE_ACTION;
                    XmNlabelString = 
                    compound_string("Store Action");
                    XmdsNnid = DEVICE_NID;
                    XmdsNputOnApply = true;
                    };
                };
            };
        };

value
    DEVICE_NID: -1;
    TR812$N_CTS_NAME: 1;
    TR812$N_COMMENT: 2;
    TR812$N_TRIGGER: 3;
    TR812$N_BURST_MODE: 4;
    TR812$N_EXT_CLOCK: 5;
    TR812$N_PRE_TRIGGER: 6;
    TR812$N_ACT_MEMORY: 7;
    TR812$N_CHANNELS: 8;
    TR812$K_NODES_PER_CHANNEL: 4;
    TR812$N_CHAN_HEAD: 0;
    TR812$N_CHAN_STARTIDX: 1;
    TR812$N_CHAN_ENDIDX: 2;
    TR812$N_CHAN_GAIN: 3;
    TR812$N_INIT_ACTION: 40;
    TR812$N_STORE_ACTION: 41;
    GAIN_VALUES: string_table(
        compound_string("1 "),
        
        compound_string("2 "),
        
        compound_string("4 "),
        
        compound_string("8 "));

end module;

