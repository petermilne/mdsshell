/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.5.1 VMS.
 *
 */
module MAIN_UIL
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("app_class", "BuilderProduct")
!(BX) bx_info("app_name", "builderProduct")
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_target", "MAIN-CXX.EXE")
!(BX) bx_info("c++_hdrext", "HXX")
!(BX) bx_info("c++_srcext", "CXX")
!(BX) bx_info("c++_callbacks", "CALLBACKS-CXX", true)
!(BX) bx_info("c++_utilities", "BXUTILS-CXX", true)
!(BX) bx_info("c++_constants", "DEFS-CXX", true)
!(BX) bx_info("c++_baseclass", "UIComponent", true)
!(BX) bx_info("c++_main", "MAIN-CXX", true)
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true)
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true)
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_target", "MAIN-C.EXE")
!(BX) bx_info("c_utilities", "BXUTILS-C.C", true)
!(BX) bx_info("c_constants", "CREATION-C.H", true)
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true)
!(BX) bx_info("c_creation", "CREATION-C.C", true)
!(BX) bx_info("c_main", "MAIN-C.C", true)
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true)
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true)
!(BX) bx_info("uil_target", "MAIN-UIL.EXE")
!(BX) bx_info("uil_utilities", "BXUTILS-UIL.C", true)
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true)
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true)
!(BX) bx_info("uil_uil", "L8100.UIL", true)
!(BX) bx_info("uil_main", "MAIN-UIL.C", true)
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true)
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true)
!(BX) bx_info("include_path", "[]", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("purify_command", "purify", false)
!(BX) bx_info("c++_libraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.exe/s"&
!(BX)	"hare,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlibshrr5."&
!(BX)	"exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$shr.exe/sh"&
!(BX)	"are")
!(BX) bx_info("c++_flags", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("system_directory", "BX$SYSTEM:")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("uil", "uil")
!(BX) bx_info("cc", "cc")
!(BX) bx_info("cpp", "CC")
!(BX) bx_info("cOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.ex"&
!(BX)	"e/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlib"&
!(BX)	"shrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$s"&
!(BX)	"hr.exe/share")
!(BX) bx_info("uilCOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("uilUILOutputIncludes", "/motif")
!(BX) bx_info("uilOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("cppOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cppOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "true")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o")

include file "XmdsWidgets.uil";

value
    DEVICE_NID :  -1;
    DEVICE$N_NAME :  1;
    DEVICE$N_COMMENT :  2;
    DEVICE$N_INIT_ACTION :  0;
    DEVICE$N_STORE_ACTION :  0;
    DEVICE$K_NODES_PER_INP :  3;
    DEVICE$N_INP_HEAD :  0;
    DEVICE$N_INP_ENDIDX :  2;
    DEVICE$N_INP_STARTIDX :  1;
    DEVICE$N_INPUTS :  12;
    L8100$K_CONG_NODES :  21;
    L8100$K_NODES_PER_INP :  8;
    L8100$N_HEAD :  0;
    L8100$N_NAME :  1;
    L8100$N_COMMENT :  2;
    L8100$N_INPUTS :  3;
    L8100$N_INPUT_1 :  3;
    L8100$N_INPUT_1_GAIN :  4;
    L8100$N_INPUT_1_MULT :  5;
    L8100$N_INPUT_1_GROUND :  6;
    L8100$N_INPUT_1_OFFSET :  7;
    L8100$N_INPUT_1_FILTER :  8;
    L8100$N_INPUT_1_OUTPUT :  9;
    L8100$N_INPUT_1_FILTER_ON :  10;
    L8100$N_INPUT_2 :  11;
    L8100$N_INPUT_2_GAIN :  12;
    L8100$N_INPUT_2_MULT :  13;
    L8100$N_INPUT_2_GROUND :  14;
    L8100$N_INPUT_2_OFFSET :  15;
    L8100$N_INPUT_2_FILTER :  16;
    L8100$N_INPUT_2_OUTPUT :  17;
    L8100$N_INPUT_2_FILTER_ON :  18;
    L8100$N_INIT_ACTION :  19;
    L8100$N_STORE_ACTION :  20;
    L8100$N_INP_HEAD :  0;
    L8100$N_INP_GAIN :  1;
    L8100$N_INP_MULT :  2;
    L8100$N_INP_GROUND :  3;
    L8100$N_INP_OFFSET :  4;
    L8100$N_INP_FILTER :  5;
    L8100$N_INP_OUTPUT :  6;
    L8100$N_INP_FILTER_ON :  7;
    L8100$N_C1 :  3;
    L8100$N_C2 :  11;
    MULTS :  string_table(
	compound_string(".2"),
	compound_string(".5"),
	compound_string("1."));
    GAINS :  string_table(
	compound_string("1."),
	compound_string("10."),
	compound_string("100."));
!(BX) "XtPointer" "identifier1"
identifier identifier1;

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 114;
!(BX)        XmNy = 133;
!(BX)        XmNwidth = 114;
!(BX)        XmNheight = 38;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog l8100;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

!(BX)object dialogShell1 : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 146;
!(BX)        XmNy = 334;
!(BX)        XmNwidth = 746;
!(BX)        XmNheight = 279;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog l1;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object L8100 : XmBulletinBoardDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNdefaultPosition = true;
        XmNnoResize = true;
        XmNdialogTitle = compound_string("LeCroy Model 8100 Dual Programmable Differential Amplifier");
    };
    controls {
         managed XmBulletinBoard bulletinBoard2;
         managed XmLabelGadget labelGadget9;
         managed XmLabelGadget labelGadget7;
         managed XmLabelGadget labelGadget;
         managed user_defined dsExprField;
         managed XmLabelGadget labelGadget1;
         managed user_defined dsExprField1;
         managed XmLabelGadget labelGadget2;
         managed XmLabelGadget labelGadget3;
         managed XmLabelGadget labelGadget4;
         managed XmLabelGadget labelGadget5;
         managed user_defined dsOkButton;
         managed user_defined dsApplyButton;
         managed user_defined dsCancelButton;
         managed XmBulletinBoard bulletinBoard1;
         managed user_defined dsXdBoxOnOffButton;
         managed user_defined dsXdBoxOnOffButton1;
         managed user_defined dsResetButton;
    };
    callbacks {
    };
};

object dsResetButton : user_defined procedure XmdsCreateResetButton widget {
    arguments {
        XmNx = 310;
        XmNy = 230;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton1 : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = L8100$N_STORE_ACTION;
        XmNx = 230;
        XmNy = 190;
        XmNwidth = 118;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = L8100$N_INIT_ACTION;
        XmNx = 30;
        XmNy = 190;
        XmNwidth = 155;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard1 : XmBulletinBoard widget {
    arguments {
        XmNborderWidth = 0;
        XmNmarginHeight = 0;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 10;
        XmNy = 150;
        XmNwidth = 730;
        XmNheight = 36;
    };
    controls {
         managed user_defined dsNidOptionMenu1;
         managed user_defined a1;
         managed XmLabelGadget labelGadget8;
         managed user_defined dsExprField6;
         managed user_defined dsExprField7;
         managed user_defined a2;
         managed user_defined dsNidOptionMenu2;
    };
    callbacks {
    };
};

object dsNidOptionMenu2 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = GAINS;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_GAIN;
        XmdsNlabelStrings = GAINS;
        XmNx = 270;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object a2 : user_defined procedure XmdsCreateOnOffToggleButton widget {
    arguments {
        XmNlabelString = compound_string("");
        XmdsNnid = DEVICE_NID;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_FILTER;
        XmNx = 680;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField7 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNx = 510;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField6 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 28;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_OUTPUT;
        XmNmarginHeight = 1;
        XmNx = 30;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget8 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("2");
    };
    controls {
    };
    callbacks {
    };
};

object a1 : user_defined procedure XmdsCreateOnOffToggleButton widget {
    arguments {
        XmNlabelString = compound_string("");
        XmdsNnid = DEVICE_NID;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_GROUND;
        XmNx = 640;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = MULTS;
        XmdsNnidOffset = L8100$N_C2 + L8100$N_INP_MULT;
        XmdsNlabelStrings = MULTS;
        XmNx = 390;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object dsCancelButton : user_defined procedure XmdsCreateCancelButton widget {
    arguments {
        XmNx = 462;
        XmNy = 230;
    };
    controls {
    };
    callbacks {
    };
};

object dsApplyButton : user_defined procedure XmdsCreateApplyButton widget {
    arguments {
        XmNx = 130;
        XmNy = 230;
    };
    controls {
    };
    callbacks {
    };
};

object dsOkButton : user_defined procedure XmdsCreateOkButton widget {
    arguments {
        XmNx = 20;
        XmNy = 230;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget5 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Filter");
        XmNx = 688;
        XmNy = 78;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget4 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Offset");
        XmNx = 558;
        XmNy = 78;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget3 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Gain");
        XmNx = 322;
        XmNy = 78;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget2 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Output");
        XmNx = 134;
        XmNy = 80;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField1 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 48;
        XmdsNnidOffset = L8100$N_COMMENT;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 106;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget1 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNx = 10;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 48;
        XmdsNnidOffset = L8100$N_NAME;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 105;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("CAMAC name:");
        XmNx = 10;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget7 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Ground");
        XmNx = 628;
        XmNy = 78;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget9 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Multiplier");
        XmNx = 430;
        XmNy = 80;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard2 : XmBulletinBoard widget {
    arguments {
        XmNborderWidth = 0;
        XmNmarginHeight = 0;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 10;
        XmNy = 110;
        XmNwidth = 724;
        XmNheight = 36;
    };
    controls {
         managed user_defined dsNidOptionMenu3;
         managed user_defined a3;
         managed XmLabelGadget labelGadget6;
         managed user_defined dsExprField2;
         managed user_defined dsExprField3;
         managed user_defined a4;
         managed user_defined dsNidOptionMenu4;
    };
    callbacks {
    };
};

object dsNidOptionMenu4 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = GAINS;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_GAIN;
        XmdsNlabelStrings = GAINS;
        XmNx = 270;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object a4 : user_defined procedure XmdsCreateOnOffToggleButton widget {
    arguments {
        XmNlabelString = compound_string("");
        XmdsNnid = DEVICE_NID;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_FILTER;
        XmNx = 680;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField3 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNx = 510;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField2 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 28;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_OUTPUT;
        XmNmarginHeight = 1;
        XmNx = 30;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget6 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("1");
    };
    controls {
    };
    callbacks {
    };
};

object a3 : user_defined procedure XmdsCreateOnOffToggleButton widget {
    arguments {
        XmNlabelString = compound_string("");
        XmdsNnid = DEVICE_NID;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_GROUND;
        XmNx = 640;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu3 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = MULTS;
        XmdsNnidOffset = L8100$N_C1 + L8100$N_INP_MULT;
        XmdsNlabelStrings = MULTS;
        XmNx = 390;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};
end module;
