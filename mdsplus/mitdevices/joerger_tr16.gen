device model = JOERGER_TR16  library = MIT$DEVICES with
{
    NAME              : undefined 							usage = text;
    COMMENT           : undefined 							usage = text;
    FREQ	      : datum value = 10 	options = no_write_shot			usage = numeric;
    EXT_CLOCK_IN      : undefined		options = no_write_shot 		usage = axis ;
    STOP_TRIG         : datum value = 0.	options = no_write_shot			usage = numeric;
    MEM_SIZE	       : datum value = 256	options = no_write_shot			usage = numeric;
    ACTIVE_MEM		: datum value = 256     options = no_write_shot			usage = numeric;
    ACTIVE_CHANS 	: datum value = 16      options = no_write_shot			usage = numeric;
    POST_TRIG   	: datum value = 16384   options = no_write_shot			usage = numeric;
    MASTER      	: datum value = 1       options = no_write_shot			usage = numeric;
    INPUT_01           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_01:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_01:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_01:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_02           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_02:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_02:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_02:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_03           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_03:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_03:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_03:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_04           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_04:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_04:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_04:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_05           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_05:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_05:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_05:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_06           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_06:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_06:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_06:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_07           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_07:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_07:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_07:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_08           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_08:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_08:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_08:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_09           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_09:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_09:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_09:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_10           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_10:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_10:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_10:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_11           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_11:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_11:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_11:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_12           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_12:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_12:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_12:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_13           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_13:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_13:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_13:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_14           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_14:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_14:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_14:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_15           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_15:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_15:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_15:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INPUT_16           : undefined		options = no_write_model,write_once,compressible	usage = signal ;
    INPUT_16:STARTIDX  : undefined 		options = no_write_shot			usage = numeric;
    INPUT_16:ENDIDX    : undefined 		options = no_write_shot			usage = numeric;
    INPUT_16:GAIN      : datum value = 1	options = no_write_shot			usage = numeric;
    INIT_ACTION       : action operation = INIT sequence = 50 phase = INIT server_class = CAMAC_SERVER;
    STORE_ACTION      : action operation = STORE sequence = 50 phase = STORE server_class = CAMAC_SERVER;
}

operation INIT requires {
     NAME : string error_message is DEV$_BAD_NAME;
     MEM_SIZE : int valid if in [128, 256, 512, 1024] error_message is TR16$_BAD_MEMSIZE;
     ACTIVE_MEM : int valid if in [8->0, 16->1, 32->2, 64->3, 128->4, 256->5, 512->6, 1024->7] error_message is TR16$_BAD_ACTIVEMEM;
     ACTIVE_CHANS : int valid if in [1->0, 2->1, 4->2, 8->3, 16->4] error_message is TR16$_BAD_ACTIVECHAN;
     POST_TRIG : int valid if in [32->0, 64->1, 128->2, 256->3, 512->4, 1024->5, 2048->6, 4096->7, 8192->8, 16384->9, 32768->10, 65536->11, 131072->12, 262144->13, 524288->14, 1048576->15] error_message is TR16$_BAD_PTS;
     FREQ : float valid if in [0.0->7, 2.5->6, 5.->5, 10.->4, 20.->3, 40.->2, 80.->1, 160.->0] error_message is TR16$_BAD_FREQUENCY; 
     MASTER : int valid if in [0, 1] error_message is TR16$_BAD_MASTER;
     INPUT_01:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_02:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_03:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_04:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_05:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_06:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_07:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_08:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_09:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_10:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_11:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_12:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_13:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_14:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_15:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     INPUT_16:GAIN : int valid if in [1->0,2->1,4->2,8->3] error_message is TR16$_BAD_GAIN;
     EXT_CLOCK_IN;
}

operation TRIGGER requires {
     NAME : string error_message is DEV$_BAD_NAME;
}

operation STORE requires {
     NAME : string error_message is DEV$_BAD_NAME;
     MEM_SIZE : int valid if in [128, 256, 512, 1024] error_message is TR16$_BAD_MEMSIZE;
     ACTIVE_MEM : int valid if in [8, 16, 32, 64, 128, 256, 512, 1024] error_message is TR16$_BAD_ACTIVEMEM;
     ACTIVE_CHANS : int valid if in [1, 2, 4, 8, 16] error_message is TR16$_BAD_ACTIVECHAN;
     FREQ : float valid if in [0.0, 2.5, 5., 10., 20., 40., 80., 160.] error_message is TR16$_BAD_FREQUENCY; 
     EXT_CLOCK_IN;
}
