/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.5.1 VMS.
 *
 */
module MAIN_UIL
version = 'V1.0'
names = case_sensitive

include file "XmdsWidgets.uil";

!(BX) bx_info("app_class", "BuilderProduct")
!(BX) bx_info("app_name", "builderProduct")
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_target", "MAIN-CXX.EXE")
!(BX) bx_info("c++_hdrext", "HXX")
!(BX) bx_info("c++_srcext", "CXX")
!(BX) bx_info("c++_callbacks", "CALLBACKS-CXX", true)
!(BX) bx_info("c++_utilities", "BXUTILS-CXX", true)
!(BX) bx_info("c++_constants", "DEFS-CXX", true)
!(BX) bx_info("c++_baseclass", "UIComponent", true)
!(BX) bx_info("c++_main", "MAIN-CXX", true)
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true)
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true)
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_target", "MAIN-C.EXE")
!(BX) bx_info("c_utilities", "BXUTILS-C.C", true)
!(BX) bx_info("c_constants", "CREATION-C.H", true)
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true)
!(BX) bx_info("c_creation", "CREATION-C.C", true)
!(BX) bx_info("c_main", "MAIN-C.C", true)
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true)
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true)
!(BX) bx_info("uil_target", "MAIN-UIL.EXE")
!(BX) bx_info("uil_utilities", "BXUTILS-UIL.C", true)
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true)
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true)
!(BX) bx_info("uil_uil", "INCAA_TR10.UIL", true)
!(BX) bx_info("uil_main", "MAIN-UIL.C", true)
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true)
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true)
!(BX) bx_info("include_path", "[]", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("c++_libraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.exe/s"&
!(BX)	"hare,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlibshrr5."&
!(BX)	"exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$shr.exe/sh"&
!(BX)	"are")
!(BX) bx_info("c++_flags", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("system_directory", "BX$SYSTEM:")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("uil", "uil")
!(BX) bx_info("cc", "cc")
!(BX) bx_info("cpp", "CC")
!(BX) bx_info("cOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.ex"&
!(BX)	"e/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlib"&
!(BX)	"shrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$s"&
!(BX)	"hr.exe/share")
!(BX) bx_info("uilCOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("uilUILOutputIncludes", "/motif")
!(BX) bx_info("uilOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("cppOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cppOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "true")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o")

value
    DEVICE_NID :  -1;
    DEVICE$N_NAME :  1;
    DEVICE$N_COMMENT :  2;
    DEVICE$N_INIT_ACTION :  0;
    DEVICE$N_STORE_ACTION :  0;
    DEVICE$K_NODES_PER_INP :  3;
    DEVICE$N_INP_HEAD :  0;
    DEVICE$N_INP_ENDIDX :  2;
    DEVICE$N_INP_STARTIDX :  1;
    DEVICE$N_INPUTS :  12;
    TR10_NODE :  1;
    TR10_BOARD :  2;
    TR10_COMMENT :  3;
    TR10_TRIG_SRC :  4;
    TR10_TRIG_CHAN :  5;
    TR10_TRIG_OUTPUT :  6;
    TR10_TRIG_SENSE :  7;
    TR10_TRIG_TERM :  8;
    TR10_TRIG_SYNC :  9;
    TR10_TRIG_LEVEL :  10;
    TR10_TRIG :  11;
    TR10_CLK_SRC :  12;
    TR10_CLK_OUTPUT :  13;
    TR10_CLK_SENSE :  14;
    TR10_CLK_TERM :  15;
    TR10_CLK_DIV :  16;
    TR10_CLOCK :  17;
    TR10_CLK_EXT_1MHZ :  18;
    TR10_POST_TRIG :  19;
    TR10_PRE_TRIG :  20;
    TR10_INPUTS :  21;
    TR10_NODES_PER_INPUT :  4;
    TR10_INPUT_HEAD :  0;
    TR10_INPUT_START :  1;
    TR10_INPUT_END :  2;
    TR10_INPUT_FILTER :  3;
    TR10_INIT_ACTION :  85;
    TR10_STORE_ACTION :  86;

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 193;
!(BX)        XmNy = 281;
!(BX)        XmNwidth = 641;
!(BX)        XmNheight = 482;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog INCAA_TR10;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object INCAA_TR10 : XmBulletinBoardDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNdefaultPosition = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNnoResize = true;
        XmNdialogTitle = compound_string("INCAA TR10 16 Channel CPCI Trans" &
 "ient Recorder (Model CADF or TRCF)");
        XmNx = 193;
        XmNy = 281;
    };
    controls {
         managed user_defined dsNidOptionMenu5;
         managed user_defined dsNidOptionMenu4;
         managed user_defined dsNidOptionMenu3;
         managed user_defined dsExprField6;
         managed XmLabelGadget labelGadget6;
         managed user_defined dsNidOptionMenu2;
         managed user_defined dsExprField5;
         managed XmLabelGadget labelGadget5;
         managed XmLabel label3;
         managed XmLabel label2;
         managed XmLabel label1;
         managed XmLabel label;
         managed XmScrolledWindow scrolledWindow;
         managed XmLabelGadget labelGadget;
         managed XmLabelGadget labelGadget1;
         managed user_defined dsExprField;
         managed user_defined dsExprField1;
         managed user_defined dsXdBoxOnOffButton;
         managed user_defined dsXdBoxOnOffButton1;
         managed user_defined dsNidOptionMenu;
         managed user_defined dsNidOptionMenu1;
         managed user_defined dsExprField2;
         managed XmLabelGadget labelGadget2;
         managed XmLabelGadget labelGadget3;
         managed user_defined dsExprField3;
         managed user_defined dsCancelButton;
         managed user_defined dsResetButton;
         managed user_defined dsOkButton;
         managed user_defined dsApplyButton;
         managed user_defined dsExprField4;
         managed XmLabelGadget labelGadget4;
    };
    callbacks {
    };
};

object labelGadget4 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("PreTrig:");
        XmNx = 30;
        XmNy = 160;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField4 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = TR10_PRE_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 130;
        XmNy = 160;
    };
    controls {
    };
    callbacks {
    };
};

object dsApplyButton : user_defined procedure XmdsCreateApplyButton {
    arguments {
        XmNx = 133;
        XmNy = 430;
    };
    controls {
    };
    callbacks {
    };
};

object dsOkButton : user_defined procedure XmdsCreateOkButton {
    arguments {
        XmNx = 10;
        XmNy = 430;
    };
    controls {
    };
    callbacks {
    };
};

object dsResetButton : user_defined procedure XmdsCreateResetButton {
    arguments {
        XmNx = 308;
        XmNy = 430;
    };
    controls {
    };
    callbacks {
    };
};

object dsCancelButton : user_defined procedure XmdsCreateCancelButton {
    arguments {
        XmNx = 508;
        XmNy = 430;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField3 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = TR10_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 130;
        XmNy = 130;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget3 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Trigger:");
        XmNx = 30;
        XmNy = 130;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget2 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("External Clock:");
        XmNx = 350;
        XmNy = 190;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField2 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = TR10_CLOCK;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 460;
        XmNy = 190;
        XmNwidth = 150;
        XmNheight = 24;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("1"));
        XmNlabelString = compound_string("Back Panel 1MHz clock:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_CLK_EXT_1MHZ;
        XmdsNlabelStrings = string_table(
	compound_string("Internal "),
	compound_string("External "));
        XmNx = 340;
        XmNy = 60;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"),
	compound_string("8"));
        XmNlabelString = compound_string("Board");
        XmdsNnidOffset = TR10_BOARD;
        XmdsNlabelStrings = string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"),
	compound_string("8"));
        XmNx = 450;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton1 : user_defined procedure XmdsCreateXdBoxOnOffButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = TR10_STORE_ACTION;
        XmNx = 217;
        XmNy = 380;
        XmNwidth = 127;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton : user_defined procedure XmdsCreateXdBoxOnOffButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = TR10_INIT_ACTION;
        XmNx = 12;
        XmNy = 380;
        XmNwidth = 173;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField1 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = TR10_COMMENT;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 111;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = TR10_NODE;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 110;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget1 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNx = 10;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Node Name:");
        XmNx = 11;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object scrolledWindow : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNx = 10;
        XmNy = 230;
        XmNwidth = 620;
        XmNheight = 150;
    };
    controls {
         managed XmRowColumn rowColumn;
    };
    callbacks {
    };
};

object rowColumn : XmRowColumn widget {
    arguments {
        XmNmarginHeight = 3;
        XmNwidth = 544;
        XmNheight = 611;
    };
    controls {
         managed XmRowColumn rowColumn1;
         managed XmRowColumn rowColumn2;
         managed XmRowColumn rowColumn3;
         managed XmRowColumn rowColumn4;
         managed XmRowColumn rowColumn5;
         managed XmRowColumn rowColumn6;
         managed XmRowColumn rowColumn7;
         managed XmRowColumn rowColumn8;
         managed XmRowColumn rowColumn9;
         managed XmRowColumn rowColumn10;
         managed XmRowColumn rowColumn11;
         managed XmRowColumn rowColumn12;
         managed XmRowColumn rowColumn13;
         managed XmRowColumn rowColumn14;
         managed XmRowColumn rowColumn15;
         managed XmRowColumn rowColumn16;
    };
    callbacks {
    };
};

object rowColumn1 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton;
         managed user_defined exprField;
         managed user_defined exprField2;
         managed user_defined exprField3;
    };
    callbacks {
    };
};

object onOffToggleButton : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("01");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 0 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 0 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField2 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 0 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField3 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 0 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn2 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton1;
         managed user_defined exprField1;
         managed user_defined exprField4;
         managed user_defined exprField5;
    };
    callbacks {
    };
};

object onOffToggleButton1 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("02");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 1 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField1 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 1 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField4 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 1 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField5 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 1 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn3 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton2;
         managed user_defined exprField6;
         managed user_defined exprField7;
         managed user_defined exprField8;
    };
    callbacks {
    };
};

object onOffToggleButton2 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("03");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 2 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField6 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 2 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField7 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 2 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField8 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 2 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn4 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton3;
         managed user_defined exprField9;
         managed user_defined exprField10;
         managed user_defined exprField11;
    };
    callbacks {
    };
};

object onOffToggleButton3 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("04");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 3 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField9 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 3 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField10 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 3 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField11 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 3 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn5 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton4;
         managed user_defined exprField12;
         managed user_defined exprField13;
         managed user_defined exprField14;
    };
    callbacks {
    };
};

object onOffToggleButton4 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("05");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 4 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField12 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 4 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField13 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 4 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField14 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 4 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn6 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton5;
         managed user_defined exprField15;
         managed user_defined exprField16;
         managed user_defined exprField17;
    };
    callbacks {
    };
};

object onOffToggleButton5 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("06");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 5 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField15 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 5 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField16 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 5 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField17 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 5 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn7 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton6;
         managed user_defined exprField18;
         managed user_defined exprField19;
         managed user_defined exprField20;
    };
    callbacks {
    };
};

object onOffToggleButton6 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("07");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 6 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField18 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 6 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField19 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 6 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField20 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 6 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn8 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton7;
         managed user_defined exprField21;
         managed user_defined exprField22;
         managed user_defined exprField23;
    };
    callbacks {
    };
};

object onOffToggleButton7 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("08");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 7 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField21 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 7 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField22 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 7 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField23 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 7 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn9 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton8;
         managed user_defined exprField24;
         managed user_defined exprField25;
         managed user_defined exprField26;
    };
    callbacks {
    };
};

object onOffToggleButton8 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("09");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 8 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField24 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 8 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField25 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 8 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField26 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 8 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn10 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton9;
         managed user_defined exprField27;
         managed user_defined exprField28;
         managed user_defined exprField29;
    };
    callbacks {
    };
};

object onOffToggleButton9 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("10");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 9 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField27 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 9 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField28 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 9 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField29 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 9 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn11 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton10;
         managed user_defined exprField30;
         managed user_defined exprField31;
         managed user_defined exprField32;
    };
    callbacks {
    };
};

object onOffToggleButton10 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("11");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 10 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField30 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 10 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField31 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 10 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField32 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 10 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn12 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton11;
         managed user_defined exprField33;
         managed user_defined exprField34;
         managed user_defined exprField35;
    };
    callbacks {
    };
};

object onOffToggleButton11 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("12");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 11 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField33 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 11 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField34 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 11 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField35 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 11 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn13 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton12;
         managed user_defined exprField36;
         managed user_defined exprField37;
         managed user_defined exprField38;
    };
    callbacks {
    };
};

object onOffToggleButton12 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("13");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 12 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField36 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 12 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField37 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 12 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField38 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 12 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn14 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton13;
         managed user_defined exprField39;
         managed user_defined exprField40;
         managed user_defined exprField41;
    };
    callbacks {
    };
};

object onOffToggleButton13 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("14");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 13 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField39 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 13 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField40 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 13 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField41 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 13 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn15 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton14;
         managed user_defined exprField42;
         managed user_defined exprField43;
         managed user_defined exprField44;
    };
    callbacks {
    };
};

object onOffToggleButton14 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("15");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 14 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField42 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 14 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField43 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 14 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField44 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 14 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn16 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNwidth = 538;
        XmNheight = 35;
    };
    controls {
         managed user_defined onOffToggleButton15;
         managed user_defined exprField45;
         managed user_defined exprField46;
         managed user_defined exprField47;
    };
    callbacks {
    };
};

object onOffToggleButton15 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("16");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 15 * TR10_NODES_PER_INPUT ) + TR10_INPUT_HEAD;
    };
    controls {
    };
    callbacks {
    };
};

object exprField45 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 15 * TR10_NODES_PER_INPUT ) + TR10_INPUT_START;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField46 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 12;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 15 * TR10_NODES_PER_INPUT ) + TR10_INPUT_END;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField47 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_INPUTS + ( 15 * TR10_NODES_PER_INPUT ) + TR10_INPUT_FILTER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("On/Off");
        XmNx = 10;
        XmNy = 210;
    };
    controls {
    };
    callbacks {
    };
};

object label1 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Start");
        XmNx = 90;
        XmNy = 210;
    };
    controls {
    };
    callbacks {
    };
};

object label2 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("End");
        XmNx = 200;
        XmNy = 210;
    };
    controls {
    };
    callbacks {
    };
};

object label3 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Filter Expression");
        XmNx = 350;
        XmNy = 210;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget5 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("PostTrig:");
        XmNx = 30;
        XmNy = 190;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField5 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = TR10_POST_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 130;
        XmNy = 190;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu2 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("\"ext\""),
	compound_string("\"star\""),
	compound_string("\"int\""),
	compound_string("\"1\""),
	compound_string("\"2\""),
	compound_string("\"3\""),
	compound_string("\"4\""),
	compound_string("\"5\""),
	compound_string("\"6\""),
	compound_string("\"7\""));
        XmNlabelString = compound_string("Trigger Source:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_TRIG_SRC;
        XmdsNlabelStrings = string_table(
	compound_string(" ext"),
	compound_string(" star"),
	compound_string(" int"),
	compound_string(" pxi-1"),
	compound_string(" pxi-2"),
	compound_string(" pxi-3"),
	compound_string(" pxi-4"),
	compound_string(" pxi-5"),
	compound_string(" pxi-6"),
	compound_string(" pxi-7"));
        XmNx = 20;
        XmNy = 60;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget6 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Clock Divide:");
        XmNx = 360;
        XmNy = 170;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField6 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = TR10_CLK_DIV;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 460;
        XmNy = 170;
        XmNwidth = 150;
        XmNheight = 24;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu3 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"));
        XmNlabelString = compound_string("Trigger Output:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_TRIG_OUTPUT;
        XmdsNlabelStrings = string_table(
	compound_string("off"),
	compound_string("pxi-1"),
	compound_string("pxi-2"),
	compound_string("pxi-3"),
	compound_string("pxi-4"),
	compound_string("pxi-5"),
	compound_string("pxi-6"),
	compound_string("pxi-7"));
        XmNx = 20;
        XmNy = 90;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu4 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("\"int\""),
	compound_string(" \"ext\""),
	compound_string(" \"pxi\""));
        XmNlabelString = compound_string("Clock Source:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_CLK_SRC;
        XmdsNlabelStrings = string_table(
	compound_string("int"),
	compound_string("ext"),
	compound_string("pxi-7"));
        XmNx = 400;
        XmNy = 90;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu5 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("1"));
        XmNlabelString = compound_string("Clock Output:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = TR10_CLK_OUTPUT;
        XmdsNlabelStrings = string_table(
	compound_string("off"),
	compound_string("pxi-7"));
        XmNx = 400;
        XmNy = 120;
    };
    controls {
    };
    callbacks {
    };
};
end module;
