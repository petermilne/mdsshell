/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.5.1 VMS.
 *
 */
module MAIN_UIL
version = 'V1.0'
names = case_sensitive

include file "XmdsWidgets.uil";

!(BX) bx_info("app_class", "BuilderProduct")
!(BX) bx_info("app_name", "builderProduct")
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_target", "MAIN-CXX.EXE")
!(BX) bx_info("c++_hdrext", "HXX")
!(BX) bx_info("c++_srcext", "CXX")
!(BX) bx_info("c++_callbacks", "CALLBACKS-CXX", true)
!(BX) bx_info("c++_utilities", "BXUTILS-CXX", true)
!(BX) bx_info("c++_constants", "DEFS-CXX", true)
!(BX) bx_info("c++_baseclass", "UIComponent", true)
!(BX) bx_info("c++_main", "MAIN-CXX", true)
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true)
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true)
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_target", "MAIN-C.EXE")
!(BX) bx_info("c_utilities", "BXUTILS-C.C", true)
!(BX) bx_info("c_constants", "CREATION-C.H", true)
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true)
!(BX) bx_info("c_creation", "CREATION-C.C", true)
!(BX) bx_info("c_main", "MAIN-C.C", true)
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true)
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true)
!(BX) bx_info("uil_target", "MAIN-UIL.EXE")
!(BX) bx_info("uil_utilities", "BXUTILS-UIL.C", true)
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true)
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true)
!(BX) bx_info("uil_uil", "DT200-1-15-02-2.UIL", true)
!(BX) bx_info("uil_main", "MAIN-UIL.C", true)
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true)
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true)
!(BX) bx_info("include_path", "[]", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("c++_libraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.exe/s"&
!(BX)	"hare,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlibshrr5."&
!(BX)	"exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$shr.exe/sh"&
!(BX)	"are")
!(BX) bx_info("c++_flags", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("system_directory", "BX$SYSTEM:")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("uil", "uil")
!(BX) bx_info("cc", "cc")
!(BX) bx_info("cpp", "CC")
!(BX) bx_info("cOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.ex"&
!(BX)	"e/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlib"&
!(BX)	"shrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$s"&
!(BX)	"hr.exe/share")
!(BX) bx_info("uilCOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("uilUILOutputIncludes", "/motif")
!(BX) bx_info("uilOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("cppOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cppOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "true")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o")

value
    DEVICE_NID :  -1;
    DEVICE$N_NAME :  1;
    DEVICE$N_COMMENT :  3;
    DEVICE$N_INIT_ACTION :  0;
    DEVICE$N_STORE_ACTION :  0;
    DEVICE$N_INPUTS :  29;
    DEVICE$K_NODES_PER_INP :  5;
    DEVICE$N_INP_HEAD :  0;
    DEVICE$N_INP_STARTIDX :  1;
    DEVICE$N_INP_ENDIDX :  2;
    DEVICE$N_INP_INC :  3;
    DEVICE$N_INP_COEFF :  4;

    DT200_N_x :  0;
    DT200_CONG_NODES :  233;
    DT200_HEAD :  0;
    DT200_NODE :  1;
    DT200_BOARD :  2;
    DT200_COMMENT :  3;
    DT200_DI0 :  4;
    DT200_DI0_WIRE :  5;
    DT200_DI0_BUS :  6;
    DT200_DI1 :  7;
    DT200_DI1_WIRE :  8;
    DT200_DI1_BUS :  9;
    DT200_DI2 :  10;
    DT200_DI2_WIRE :  11;
    DT200_DI2_BUS :  12;
    DT200_DI3 :  13;
    DT200_DI3_WIRE :  14;
    DT200_DI3_BUS :  15;
    DT200_DI4 :  16;
    DT200_DI4_WIRE :  17;
    DT200_DI4_BUS :  18;
    DT200_DI5 :  19;
    DT200_DI5_WIRE :  20;
    DT200_DI5_BUS :  21;

    DT200_CLOCK_SRC : 22  ;
    DT200_CLOCK_DIV : 23  ;
    DT200_DAQ_MEM : 24  ;
    DT200_ACTIVE_CHAN : 25  ;
    DT200_TRIG_SRC : 26  ;
    DT200_POST_TRIG : 27  ;
    DT200_PRE_TRIG : 28  ;

    DT200_INPUTS :  29;

    DT200_INIT_ACTION :  109;
    DT200_STORE_ACTION :  110;

    FILTER_LABEL : compound_string("Coeffs");

procedure ManageChild(string);
procedure UnManageChild(string);

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 460;
!(BX)        XmNy = 467;
!(BX)        XmNwidth = 816;
!(BX)        XmNheight = 557;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog dT_ACQ16;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object DT_ACQ16 : XmFormDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogTitle = compound_string("ACQ16 CPCI Digitizer");
        XmNx = 460;
        XmNy = 467;
        XmNwidth = 816;
        XmNheight = 557;
    };
    controls {
         managed user_defined dsExprField1;
         managed XmLabelGadget labelGadget1;
         managed XmPushButton pushButton4;
         managed XmPushButton pushButton3;
         managed XmPushButton pushButton2;
         managed XmScrolledWindow scrolledWindow1;
         managed user_defined dsExprField85;
         managed XmLabelGadget labelGadget13;
         managed user_defined nidOptionMenu4;
         managed user_defined nidOptionMenu3;
         managed user_defined dsNidOptionMenu1;
         managed user_defined nidOptionMenu2;
         managed XmForm bottomButtons3;
         managed user_defined commentField;
         managed XmLabelGadget commentLabel;
         managed user_defined nameField;
         managed XmLabelGadget nameLabel;
         unmanaged XmFormDialog routingBox;
    };
    callbacks {
    };
};

object nameLabel : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("CPCI node name:");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object nameField : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_NAME;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmdsNautoQuote = true;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 110;
    };
    controls {
    };
    callbacks {
    };
};

object commentLabel : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmLabelGadget nameLabel;
        XmNleftWidget = XmLabelGadget nameLabel;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
    };
    controls {
    };
    callbacks {
    };
};

object commentField : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_COMMENT;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmdsNautoQuote = true;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNleftOffset = 110;
    };
    controls {
    };
    callbacks {
    };
};

object bottomButtons3 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
    };
    controls {
         managed user_defined storeAction;
         managed user_defined initAction;
         managed XmForm deviceButtons3;
    };
    callbacks {
    };
};

object deviceButtons3 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = user_defined  initAction;
        XmNtopOffset = 15;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNy = 50;
    };
    controls {
         managed user_defined cancelButton3;
         managed user_defined resetButton3;
         managed user_defined applyButton2;
         managed user_defined okButton3;
    };
    callbacks {
    };
};

object okButton3 : user_defined procedure XmdsCreateOkButton {
    arguments {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object applyButton2 : user_defined procedure XmdsCreateApplyButton {
    arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 33;
        XmNleftOffset = -25;
    };
    controls {
    };
    callbacks {
    };
};

object resetButton3 : user_defined procedure XmdsCreateResetButton {
    arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 66;
        XmNleftOffset = -25;
    };
    controls {
    };
    callbacks {
    };
};

object cancelButton3 : user_defined procedure XmdsCreateCancelButton {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNrightOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object initAction : user_defined procedure XmdsCreateXdBoxOnOffButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = DT200_INIT_ACTION;
    };
    controls {
    };
    callbacks {
    };
};

object storeAction : user_defined procedure XmdsCreateXdBoxOnOffButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = DT200_STORE_ACTION;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = user_defined  initAction;
        XmNleftOffset = 20;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu2 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"),
	compound_string("8"));
        XmNlabelString = compound_string("Board Number:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_BOARD;
        XmdsNlabelStrings = string_table(
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"),
	compound_string("8"));
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = user_defined nameField;
        XmNleftWidget = user_defined nameField;
        XmNtopOffset = 10;
        XmNbottomOffset = 0;
        XmNleftOffset = 36;
        XmNrightOffset = 0;
        XmNx = 450;
        XmNy = 20;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("2 "),
	compound_string("4 "),
	compound_string("6"),
	compound_string("8"),
	compound_string("10"),
	compound_string("12"),
	compound_string("14"),
	compound_string("16"));
        XmNlabelString = compound_string("Active Channels:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_ACTIVE_CHAN;
        XmdsNlabelStrings = string_table(
	compound_string("2 "),
	compound_string("4 "),
	compound_string("6"),
	compound_string("8"),
	compound_string("10"),
	compound_string("12"),
	compound_string("14"),
	compound_string("16"));
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNtopWidget = XmLabelGadget commentLabel;
        XmNtopOffset = 9;
        XmNbottomOffset = 0;
        XmNx = 10;
        XmNy = 70;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu3 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'DI0'"),
	compound_string("'DI1'"),
	compound_string("'DI2'"),
	compound_string("'DI3'"),
	compound_string("'DI4'"),
	compound_string("'DI5'"));
        XmNlabelString = compound_string("Trigger Source:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_TRIG_SRC;
        XmdsNlabelStrings = string_table(
	compound_string("DI0"),
	compound_string("DI1"),
	compound_string("DI2"),
	compound_string("DI3"),
	compound_string("DI4"),
	compound_string("DI5"));
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = user_defined  dsNidOptionMenu1;
        XmNtopOffset = 1;
        XmNbottomOffset = 0;
        XmNleftOffset = 17;
        XmNx = 17;
        XmNy = 110;
        XmNheight = 39;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu4 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'DI0'"),
	compound_string("'DI1'"),
	compound_string("'DI2'"),
	compound_string("'DI3'"),
	compound_string("'DI4'"),
	compound_string("'DI5'"),
	compound_string("'INT'"));
        XmNlabelString = compound_string("Clock Source:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_CLOCK_SRC;
        XmdsNlabelStrings = string_table(
	compound_string("DI0"),
	compound_string("DI1"),
	compound_string("DI2"),
	compound_string("DI3"),
	compound_string("DI4"),
	compound_string("DI5"),
	compound_string("Int/Div"));
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = user_defined  nidOptionMenu3;
        XmNtopOffset = 40;
        XmNbottomOffset = 0;
        XmNleftOffset = 30;
        XmNx = 30;
        XmNy = 150;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget13 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Pre Trigger Samples (K)");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = user_defined commentField;
        XmNleftWidget = user_defined  dsNidOptionMenu1;
        XmNtopOffset = 26;
        XmNbottomOffset = 0;
        XmNleftOffset = 43;
        XmNrightOffset = 0;
        XmNx = 280;
        XmNy = 90;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField85 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_PRE_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmLabelGadget labelGadget13;
        XmNleftWidget = XmLabelGadget labelGadget13;
        XmNtopOffset = 1;
        XmNbottomOffset = 0;
        XmNleftOffset = 22;
        XmNrightOffset = 0;
        XmNx = 460;
        XmNy = 91;
    };
    controls {
    };
    callbacks {
    };
};

object scrolledWindow1 : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNtopWidget = user_defined  nidOptionMenu4;
        XmNtopOffset = 11;
        XmNbottomOffset = 0;
        XmNx = 30;
        XmNy = 200;
        XmNwidth = 560;
        XmNheight = 260;
    };
    controls {
         managed XmRowColumn rowColumn34;
    };
    callbacks {
    };
};

object rowColumn34 : XmRowColumn widget {
    arguments {
        XmNwidth = 505;
        XmNheight = 1347;
    };
    controls {
         managed XmRowColumn rowColumn48;
         managed XmRowColumn rowColumn49;
         managed XmRowColumn rowColumn50;
         managed XmRowColumn rowColumn51;
         managed XmRowColumn rowColumn52;
         managed XmRowColumn rowColumn53;
         managed XmRowColumn rowColumn54;
         managed XmRowColumn rowColumn55;
         managed XmRowColumn rowColumn56;
         managed XmRowColumn rowColumn57;
         managed XmRowColumn rowColumn58;
         managed XmRowColumn rowColumn59;
         managed XmRowColumn rowColumn60;
         managed XmRowColumn rowColumn61;
         managed XmRowColumn rowColumn62;
         managed XmRowColumn rowColumn63;  
    };
    callbacks {
    };
};

object rowColumn48 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton24;
         managed user_defined dsExprField86;
         managed user_defined dsExprField87;
         managed user_defined dsExprField88;
         managed user_defined dsXdBoxOnOffButton26;
    };
    callbacks {
    };
};

object dsOnOffToggleButton24 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("01");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 0 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField86 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 0 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField87 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 0 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField88 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 0 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton26 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 0 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn49 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton17;
         managed user_defined exprField35;
         managed user_defined exprField36;
         managed user_defined exprField37;
         managed user_defined xdBoxOnOffButton11;
    };
    callbacks {
    };
};

object onOffToggleButton17 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("02");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 1 * DEVICE$K_NODES_PER_INP );
    };
    controls {
    };
    callbacks {
    };
};

object exprField35 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 1 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField36 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 1 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField37 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 1 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton11 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + ( 1 * DEVICE$K_NODES_PER_INP ) + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn50 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton18;
         managed user_defined exprField38;
         managed user_defined exprField39;
         managed user_defined exprField40;
         managed user_defined xdBoxOnOffButton12;
    };
    callbacks {
    };
};

object onOffToggleButton18 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("03");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 2 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField38 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 2 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField39 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 2 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField40 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 2 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton12 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 2 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn51 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton19;
         managed user_defined exprField41;
         managed user_defined exprField42;
         managed user_defined exprField43;
         managed user_defined xdBoxOnOffButton13;
    };
    callbacks {
    };
};

object onOffToggleButton19 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("04");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 3 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField41 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 3 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField42 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 3 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField43 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 3 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton13 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 3 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn52 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton20;
         managed user_defined exprField44;
         managed user_defined exprField45;
         managed user_defined exprField46;
         managed user_defined xdBoxOnOffButton14;
    };
    callbacks {
    };
};

object onOffToggleButton20 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("05");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 4 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField44 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 4 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField45 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 4 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField46 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 4 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton14 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 4 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn53 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton21;
         managed user_defined exprField47;
         managed user_defined exprField48;
         managed user_defined exprField49;
         managed user_defined xdBoxOnOffButton15;
    };
    callbacks {
    };
};

object onOffToggleButton21 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("06");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 5 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField47 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 5 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField48 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 5 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField49 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 5 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton15 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 5 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn54 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton22;
         managed user_defined exprField50;
         managed user_defined exprField51;
         managed user_defined exprField52;
         managed user_defined xdBoxOnOffButton16;
    };
    callbacks {
    };
};

object onOffToggleButton22 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("07");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 6 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField50 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 6 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField51 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 6 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField52 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 6 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton16 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 6 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn55 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton23;
         managed user_defined exprField53;
         managed user_defined exprField54;
         managed user_defined exprField55;
         managed user_defined xdBoxOnOffButton17;
    };
    callbacks {
    };
};

object onOffToggleButton23 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("08");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 7 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField53 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 7 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField54 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 7 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField55 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 7 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton17 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 7 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn56 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton24;
         managed user_defined exprField56;
         managed user_defined exprField57;
         managed user_defined exprField58;
         managed user_defined xdBoxOnOffButton18;
    };
    callbacks {
    };
};

object onOffToggleButton24 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("09");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 8 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField56 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 8 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField57 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 8 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField58 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 8 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton18 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 8 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn57 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined onOffToggleButton25;
         managed user_defined exprField59;
         managed user_defined exprField60;
         managed user_defined exprField61;
         managed user_defined xdBoxOnOffButton19;
    };
    callbacks {
    };
};

object onOffToggleButton25 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("10");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 9 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object exprField59 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 9 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField60 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 9 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object exprField61 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 9 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object xdBoxOnOffButton19 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNputOnApply = true;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 9 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn58 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton25;
         managed user_defined dsExprField89;
         managed user_defined dsExprField90;
         managed user_defined dsExprField91;
         managed user_defined dsXdBoxOnOffButton27;
    };
    callbacks {
    };
};

object dsOnOffToggleButton25 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("11");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 10 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField89 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 10 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField90 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 10 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField91 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 10 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton27 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 10 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn59 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton26;
         managed user_defined dsExprField92;
         managed user_defined dsExprField93;
         managed user_defined dsExprField94;
         managed user_defined dsXdBoxOnOffButton28;
    };
    callbacks {
    };
};

object dsOnOffToggleButton26 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("12");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 11 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField92 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 11 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField93 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 11 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField94 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 11 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton28 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 11 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn60 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton27;
         managed user_defined dsExprField95;
         managed user_defined dsExprField96;
         managed user_defined dsExprField97;
         managed user_defined dsXdBoxOnOffButton29;
    };
    callbacks {
    };
};

object dsOnOffToggleButton27 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("13");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 12 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField95 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 12 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField96 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 12 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField97 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 12 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton29 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 12 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn61 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton28;
         managed user_defined dsExprField98;
         managed user_defined dsExprField99;
         managed user_defined dsExprField100;
         managed user_defined dsXdBoxOnOffButton30;
    };
    callbacks {
    };
};

object dsOnOffToggleButton28 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("14");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 13 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField98 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 13 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField99 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 13 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField100 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 13 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton30 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 13 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn62 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton29;
         managed user_defined dsExprField101;
         managed user_defined dsExprField102;
         managed user_defined dsExprField103;
         managed user_defined dsXdBoxOnOffButton31;
    };
    callbacks {
    };
};

object dsOnOffToggleButton29 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("15");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 14 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField101 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 14 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField102 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 14 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField103 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 14 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton31 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 14 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};

object rowColumn63 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNnumColumns = 5;
        XmNwidth = 499;
        XmNheight = 39;
    };
    controls {
         managed user_defined dsOnOffToggleButton30;
         managed user_defined dsExprField104;
         managed user_defined dsExprField105;
         managed user_defined dsExprField106;
         managed user_defined dsXdBoxOnOffButton32;
    };
    callbacks {
    };
};

object dsOnOffToggleButton30 : user_defined procedure XmdsCreateOnOffToggleButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("16");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 15 * DEVICE$K_NODES_PER_INP;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField104 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 15 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_STARTIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField105 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 15 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_ENDIDX;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField106 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 10;
        XmdsNputOnApply = true;
        XmdsNnidOffset = DEVICE$N_INPUTS + 15 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_INC;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton32 : user_defined procedure XmdsCreateXdBoxDialogButton {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = FILTER_LABEL;
        XmdsNnidOffset = DEVICE$N_INPUTS + 15 * DEVICE$K_NODES_PER_INP + DEVICE$N_INP_COEFF;
    };
    controls {
    };
    callbacks {
    };
};


object pushButton2 : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("Digital Outputs");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmPushButton pushButton4;
        XmNleftWidget = XmScrolledWindow scrolledWindow1;
        XmNtopOffset = 29;
        XmNbottomOffset = 0;
        XmNleftOffset = 30;
        XmNrightOffset = 0;
        XmNx = 620;
        XmNy = 290;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton3 : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("Analog Outputs");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmPushButton pushButton2;
        XmNleftWidget = XmScrolledWindow scrolledWindow1;
        XmNtopOffset = 19;
        XmNbottomOffset = 0;
        XmNleftOffset = 30;
        XmNrightOffset = 0;
        XmNx = 620;
        XmNy = 350;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton4 : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("Trigger Routing");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmScrolledWindow scrolledWindow1;
        XmNleftWidget = XmScrolledWindow scrolledWindow1;
        XmNtopOffset = 20;
        XmNbottomOffset = 0;
        XmNleftOffset = 30;
        XmNrightOffset = 0;
        XmNx = 620;
        XmNy = 220;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure ManageChild("*routingBox");
    };
};

object labelGadget1 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Post Trigger Samples (K)");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmLabelGadget labelGadget13;
        XmNleftWidget = XmLabelGadget labelGadget13;
        XmNtopOffset = 40;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 280;
        XmNy = 130;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField1 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_POST_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = user_defined dsExprField85;
        XmNleftWidget = user_defined dsExprField85;
        XmNtopOffset = 39;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 460;
        XmNy = 130;
    };
    controls {
    };
    callbacks {
    };
};

!(BX)object dialogShell1 : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 561;
!(BX)        XmNy = 272;
!(BX)        XmNwidth = 742;
!(BX)        XmNheight = 349;
!(BX)    };
!(BX)    controls {
!(BX)         unmanaged XmFormDialog routingBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object routingBox : XmFormDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogTitle = compound_string("Dt100 Trigger/Clock Routing");
        XmNheight = 400;
        XmNx = 561;
        XmNy = 272;
    };
    controls {
         managed user_defined exprField3;
         managed XmLabel label3;
!         managed user_defined nidOptionMenu;
         managed XmFrame frame1;
         managed XmForm bottomButtons;
    };
    callbacks {
    };
};

object bottomButtons : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
    };
    controls {
         managed XmForm deviceButtons;
    };
    callbacks {
    };
};

object deviceButtons : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 15;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNy = 0;
    };
    controls {
         managed XmPushButton pushButton;
         managed user_defined resetButton;
    };
    callbacks {
    };
};

object resetButton : user_defined procedure XmdsCreateResetButton {
    arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 19;
        XmNtopOffset = 0;
        XmNleftOffset = -25;
        XmNx = 116;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("Dismiss");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 520;
        XmNx = 520;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure UnManageChild("*routingBox");
    };
};

object frame1 : XmFrame widget {
    arguments {
        XmNshadowType = XmSHADOW_IN;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNbottomOffset = 65;
        XmNleftOffset = 5;
        XmNrightOffset = 38;
        XmNx = 5;
        XmNy = 10;
    };
    controls {
         managed XmRowColumn rowColumn35;
    };
    callbacks {
    };
};

object rowColumn35 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNisAligned = false;
        XmNpacking = XmPACK_COLUMN;
        XmNnumColumns = 7;
        XmNisHomogeneous = false;
        XmNx = 2;
        XmNy = 2;
    };
    controls {
         managed XmLabel a5;
         managed XmLabel a6;
         managed XmLabel a7;
         managed XmLabel a8;
         managed XmLabel label1;
         managed user_defined nidOptionMenu1;
         managed user_defined nidOptionMenu16;
         managed user_defined dsExprFielda6;
         managed XmLabel label6;
         managed user_defined nidOptionMenu17;
         managed user_defined nidOptionMenu18;
         managed user_defined dsExprFielda7;
         managed XmLabel label8;
         managed user_defined nidOptionMenu19;
         managed user_defined nidOptionMenu20;
         managed user_defined dsExprFielda8;
         managed XmLabel label9;
         managed user_defined nidOptionMenu21;
         managed user_defined nidOptionMenu22;
         managed user_defined dsExprFielda9;
         managed XmLabel label10;
         managed user_defined nidOptionMenu23;
         managed user_defined nidOptionMenu24;
         managed user_defined dsExprFielda10;
         managed XmLabel label11;
         managed user_defined nidOptionMenu25;
         managed user_defined nidOptionMenu26;
         managed user_defined dsExprFielda11;
    };
    callbacks {
    };
};

object a5 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Line");
    };
    controls {
    };
    callbacks {
    };
};

object a6 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Wire");
    };
    controls {
    };
    callbacks {
    };
};

object a7 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Bus");
    };
    controls {
    };
    callbacks {
    };
};

object a8 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Time");
    };
    controls {
    };
    callbacks {
    };
};

object label1 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI0");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI0'"),
	compound_string("'J50'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI0_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI0 clk-F"),
	compound_string("J50 clk-R"),
	compound_string("None"));
        XmNwidth = 170;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu16 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG0'"),
	compound_string("'PXI_TRIG6'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI0_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG0"),
	compound_string(" PXI_TRIG6"),
	compound_string(" None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda6 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI0;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label6 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI1");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu17 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI1'"),
	compound_string("'J51'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI1_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI1 (unused)"),
	compound_string("J51"),
	compound_string("None"));
        XmNwidth = 170;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu18 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG1'"),
	compound_string("'PXI_TRIG7'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI1_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG1"),
	compound_string("PXI_TRIG7"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda7 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI1;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label8 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI2");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu19 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI2'"),
	compound_string("'J52'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI2_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI2 ai trig-F"),
	compound_string("J52 ai trig-R"),
	compound_string("None"));
        XmNwidth = 170;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu20 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG2'"),
	compound_string("'STAR'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI2_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG2"),
	compound_string("STAR"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda8 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI2;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label9 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI3");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu21 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI3'"),
	compound_string("'J53'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI3_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI3 unused"),
	compound_string("J53 ao trig-R"),
	compound_string("None"));
        XmNwidth = 170;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu22 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG3'"),
	compound_string("'CLK_10'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI3_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG3"),
	compound_string("CLK_10"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda9 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI3;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label10 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI4");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu23 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI4'"),
	compound_string("'J34'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI4_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI4 unused"),
	compound_string("J34 do clk-R"),
	compound_string("None"));
        XmNwidth = 170;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu24 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG4'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI4_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG4"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda10 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI4;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object label11 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string(" DI5");
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu25 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'MI5'"),
	compound_string("'J35'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI5_WIRE;
        XmdsNlabelStrings = string_table(
	compound_string("MI5 unused"),
	compound_string("J35 do trig-R"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu26 : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'PXI_TRIG5'"),
	compound_string(""));
        XmNlabelString = compound_string("");
        XmdsNputOnApply = true;
        XmdsNnidOffset = DT200_DI5_BUS;
        XmdsNlabelStrings = string_table(
	compound_string("PXI_TRIG5"),
	compound_string("None"));
    };
    controls {
    };
    callbacks {
    };
};

object dsExprFielda11 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = DT200_DI5;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu : user_defined procedure XmdsCreateNidOptionMenu {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("'DI0'"),
	compound_string("'DI1'"),
	compound_string("'DI2'"),
	compound_string("'DI2'"),
	compound_string("'DI4'"),
	compound_string("'DI5'"),
	compound_string("'INT'"));
        XmNlabelString = compound_string("Internal Clock Source");
        XmdsNputOnApply = true;
        XmdsNlabelStrings = string_table(
	compound_string("DI0"),
	compound_string("DI1"),
	compound_string("DI2"),
	compound_string("DI2"),
	compound_string("DI4"),
	compound_string("DI5"),
	compound_string("INT"));
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = XmFrame frame1;
        XmNtopOffset = -1;
        XmNbottomOffset = 0;
        XmNleftOffset = 70;
        XmNx = 70;
        XmNy = 310;
    };
    controls {
    };
    callbacks {
    };
};

object label3 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Clock Divide / Frequency");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = XmFrame frame1;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 100;
        XmNx = 370;
        XmNy = 320;
    };
    controls {
    };
    callbacks {
    };
};

object exprField3 : user_defined procedure XmdsCreateExprField {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNnidOffset =     DT200_CLOCK_DIV;
        XmNcolumns = 16;
        XmdsNputOnApply = true;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmLabel label3;
        XmNleftWidget = XmLabel label3;
        XmNtopOffset = -21;
        XmNbottomOffset = 0;
        XmNleftOffset = 32;
        XmNrightOffset = 0;
        XmNx = 570;
        XmNy = 320;
    };
    controls {
    };
    callbacks {
    };
};

end module;
