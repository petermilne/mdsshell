/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.1.
 *
 */
module MAIN_UIL
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("include_path", "[]", false )
!(BX) bx_info("c_information", true )
!(BX) bx_info("app_class", "BuilderProduct", true )
!(BX) bx_info("app_name", "builderProduct", true )
!(BX) bx_info("c++_pixmaps", "DEFS-CXX.HXX", true )
!(BX) bx_info("c++_baseclass", "UICOMPONENTXX", true )
!(BX) bx_info("c++_utilities", "BXUTIL-CXX.CXX", true )
!(BX) bx_info("c++_main", "MAIN-CXX.CXX", true )
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true )
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true )
!(BX) bx_info("uil_utilities", "BXUTIL-UIL.C", true )
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true )
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true )
!(BX) bx_info("uil_uil", "L6810.UIL", true )
!(BX) bx_info("uil_main", "MAIN-UIL.C", true )
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true )
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true )
!(BX) bx_info("c_utilities", "BXUTIL-C.C", true )
!(BX) bx_info("c_pixmaps", "CREATION-C.H", true )
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true )
!(BX) bx_info("c_creation", "CREATION-C.C", true )
!(BX) bx_info("c_main", "MAIN-C.C", true )
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true )
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true )
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT", true )

include file "XmdsWidgets.uil";

value
    DEVICE_NID :  -1;
    DEVICE$K_NODES_PER_INP :  3;
    DEVICE$N_INP_HEAD :  0;
    DEVICE$N_INP_ENDIDX :  2;
    DEVICE$N_INP_STARTIDX :  1;
    DEVICE$N_INPUTS :  12;
    DEVICE$N_NAME :  1;
    DEVICE$N_COMMENT :  2;
    DEVICE$N_INIT_ACTION :  0;
    DEVICE$N_STORE_ACTION :  0;
    L6810$N_NAME :  1;
    L6810$N_COMMENT :  2;
    L6810$N_INIT_ACTION :  29;
    L6810$N_STORE_ACTION :  30;
    L6810$N_ACTIVE_CHANS :  8;
    L6810$N_FREQ :  3;
    L6810$N_EXT_CLOCK_IN :  4;
    L6810$N_STOP_TRIG :  5;
    L6810$N_INP_HEAD :  0;
    L6810$N_INP_ENDIDX :  2;
    L6810$K_NODES_PER_INP :  5;
    L6810$N_INP_STARTIDX :  1;
    L6810$N_INPUTS :  9;
    L6810$N_INP_FULL_SCALE :  3;
    gains :  string_table(
	compound_string(".4096"),
	compound_string(" 1.024"),
	compound_string(" 2.048"),
	compound_string(" 4.096"),
	compound_string("10.24"),
	compound_string(" 25.6"),
	compound_string(" 51.2"),
	compound_string(" 102.4"));
    L6810$N_INP_COUPLING :  4;
    chan_src_strs :  string_table(
	compound_string("DC Coupled"),
	compound_string("AC Coupled"),
	compound_string("Inverting DC"),
	compound_string("Inverting AC"),
	compound_string("Differential DC"),
	compound_string("Differential AC"),
	compound_string("Grounded DC"),
	compound_string("Grounded AC"));
    chan_src_codes :  string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"));
    L6810$N_ACTIVE_MEM :  7;
    L6810$K_CONG_NODES :  31;
    L6810$N_HEAD :  0;
    L6810$N_MEMORIES :  6;

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 314;
!(BX)        XmNy = 93;
!(BX)        XmNwidth = 815;
!(BX)        XmNheight = 430;
!(BX)    };
!(BX)    controls {
!(BX)       managed XmBulletinBoardDialog l6810;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object L6810 : XmBulletinBoardDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNdefaultPosition = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNnoResize = false;
        XmNdialogTitle = compound_string("L6810  Lecroy 4 Channel Transient Recorder");
        XmNx = 314;
        XmNy = 93;
        XmNwidth = 815;
        XmNheight = 430;
    };
    controls {
       managed XmLabelGadget labelGadget;
       managed XmLabelGadget labelGadget1;
       managed user_defined dsExprField;
       managed user_defined dsExprField1;
       managed user_defined dsXdBoxOnOffButton;
       managed user_defined dsXdBoxOnOffButton1;
       managed user_defined dsNidOptionMenu;
       managed user_defined dsNidOptionMenu1;
       managed user_defined dsExprField2;
       managed XmLabelGadget labelGadget2;
       managed XmLabelGadget labelGadget3;
       managed user_defined dsExprField3;
       managed user_defined dsCancelButton;
       managed user_defined dsResetButton;
       managed user_defined dsOkButton;
       managed user_defined dsApplyButton;
       managed XmBulletinBoard bulletinBoard;
       managed user_defined dsNidOptionMenu2;
    };
    callbacks {
    };
};

object dsNidOptionMenu2 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1"),
	compound_string("2"),
	compound_string("4"),
	compound_string("8"),
	compound_string("16"),
	compound_string("32"),
	compound_string("64"),
	compound_string("128"),
	compound_string("256"),
	compound_string("512"));
        XmNlabelString = compound_string("Samples:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810$N_ACTIVE_MEM;
        XmdsNlabelStrings = string_table(
	compound_string("1 K"),
	compound_string("2 K"),
	compound_string("4 K"),
	compound_string("8 K"),
	compound_string("16 K"),
	compound_string("32 K"),
	compound_string("64 K"),
	compound_string("128 K"),
	compound_string("256 K"),
	compound_string("512 K"));
        XmNx = 469;
        XmNy = 104;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNborderWidth = 1;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 13;
        XmNy = 138;
        XmNwidth = 785;
        XmNheight = 190;
    };
    controls {
       managed user_defined dsDigChans;
       managed user_defined dsNidOptionMenu3;
       managed user_defined dsNidOptionMenu4;
       managed user_defined dsNidOptionMenu5;
       managed user_defined dsNidOptionMenu6;
       managed XmLabelGadget labelGadget4;
       managed XmLabelGadget labelGadget5;
       managed user_defined dsNidOptionMenu7;
       managed user_defined dsNidOptionMenu8;
       managed user_defined dsNidOptionMenu9;
       managed user_defined dsNidOptionMenu10;
    };
    callbacks {
    };
};

object dsNidOptionMenu10 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810$N_INPUTS + 3 * L6810$K_NODES_PER_INP + L6810$N_INP_COUPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 629;
        XmNy = 128;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu9 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810$N_INPUTS + 2 * L6810$K_NODES_PER_INP + L6810$N_INP_COUPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 630;
        XmNy = 95;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu8 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810$N_INPUTS + 1 * L6810$K_NODES_PER_INP + L6810$N_INP_COUPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 629;
        XmNy = 64;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu7 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810$N_INPUTS + 0 * L6810$K_NODES_PER_INP + L6810$N_INP_COUPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 628;
        XmNy = 31;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget5 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("src/coupling");
        XmNx = 653;
        XmNy = 11;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget4 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Full Scale");
        XmNx = 510;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu6 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810$N_INPUTS + 3 * L6810$K_NODES_PER_INP + L6810$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 128;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu5 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810$N_INPUTS + 2 * L6810$K_NODES_PER_INP + L6810$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 94;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu4 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810$N_INPUTS + 1 * L6810$K_NODES_PER_INP + L6810$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 62;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu3 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810$N_INPUTS + 0 * L6810$K_NODES_PER_INP + L6810$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 30;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsDigChans : user_defined procedure XmdsCreateDigChans widget {
    arguments {
        XmdsNnodesPerChannel = L6810$K_NODES_PER_INP;
        XmdsNnid = DEVICE_NID;
        XmdsNchannels = 4;
        XmdsNendIdxNidOffset = L6810$N_INP_ENDIDX;
        XmdsNstartIdxNidOffset = L6810$N_INP_STARTIDX;
        XmdsNdataNidOffset = L6810$N_INP_HEAD;
        XmdsNnidOffset = L6810$N_INPUTS;
        XmNwidth = 472;
    };
    controls {
    };
    callbacks {
    };
};

object dsApplyButton : user_defined procedure XmdsCreateApplyButton widget {
    arguments {
        XmNx = 239;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsOkButton : user_defined procedure XmdsCreateOkButton widget {
    arguments {
        XmNx = 9;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsResetButton : user_defined procedure XmdsCreateResetButton widget {
    arguments {
        XmNx = 497;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsCancelButton : user_defined procedure XmdsCreateCancelButton widget {
    arguments {
        XmNx = 739;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField3 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = L6810$N_STOP_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 72;
        XmNy = 106;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget3 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Trigger:");
        XmNx = 10;
        XmNy = 109;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget2 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("External Clock:");
        XmNx = 259;
        XmNy = 76;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField2 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = L6810$N_EXT_CLOCK_IN;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 365;
        XmNy = 74;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("20"),
	compound_string("50"),
	compound_string("100"),
	compound_string("200"),
	compound_string("500"),
	compound_string("1000"),
	compound_string("2000"),
	compound_string("5000"),
	compound_string("10000"),
	compound_string("20000"),
	compound_string("50000"),
	compound_string("100000"),
	compound_string("200000"),
	compound_string("500000"),
	compound_string("1000000"),
	compound_string("2000000"),
	compound_string("5000000"));
        XmNlabelString = compound_string("Internal Clock");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810$N_FREQ;
        XmdsNlabelStrings = string_table(
	compound_string("External Clock"),
	compound_string("20  Hz"),
	compound_string("50  Hz"),
	compound_string("100 Hz"),
	compound_string("200 Hz"),
	compound_string("500 Hz"),
	compound_string("1   KHz"),
	compound_string("2   KHz"),
	compound_string("5   KHz"),
	compound_string("10  KHz"),
	compound_string("20  KHz"),
	compound_string("50  KHz"),
	compound_string("100 KHz"),
	compound_string("200 KHz"),
	compound_string("500 KHz"),
	compound_string("1   MHz"),
	compound_string("2   MHz"),
	compound_string("5   MHz"));
        XmNx = 9;
        XmNy = 69;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1 "),
	compound_string("2 "),
	compound_string("4 "));
        XmNlabelString = compound_string("Active Channels:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810$N_ACTIVE_CHANS;
        XmdsNlabelStrings = string_table(
	compound_string("1 "),
	compound_string("2 "),
	compound_string("4 "));
        XmNx = 247;
        XmNy = 104;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton1 : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = L6810$N_STORE_ACTION;
        XmNx = 226;
        XmNy = 346;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = L6810$N_INIT_ACTION;
        XmNx = 12;
        XmNy = 346;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField1 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = L6810$N_COMMENT;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 108;
        XmNy = 38;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = L6810$N_NAME;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 110;
        XmNy = 8;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget1 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNx = 10;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string(" CAMAC Name:");
        XmNx = 11;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};
end module;
